import React, {useState, createContext, useContext, useRef} from 'react';
import PushNotification from 'react-native-push-notification';

export const NotificationContext = createContext();

export const NotificationProvider = ({children}) => {
  //const domain = 'http://3.236.93.113:80/';

 
  const ws_domain = 'wss://joinsayhi.com/'; //'ws://127.0.0.1:8000/'
  const domain = 'https://joinsayhi.com/'; //'http://127.0.0.1:8000/';

  //const domain = 'http://127.0.0.1:8000/'; //'https://joinsayhi.com/'
  //const ws_domain = 'ws://127.0.0.1:8000/'; //'wss://joinsayhi.com/';
  const [sayHiNotif, setSayHiNotif] = useState([]); //0
  const [chatNotif, setChatNotif] = useState([]);
  /*
  var ws_notifications = useRef(null);
  const wsUrl = ws_domain + 'ws/notifications/'; //+ data.id;
  ws_notifications.current = new WebSocket(wsUrl);
  */

  //var ws = useRef(new WebSocket(wsUrl)).current;
  //show local notification to user
  const wsUrl = ws_domain + 'ws/notifications/'; //+ data.id;
  //var ws_notifications = useRef(new WebSocket(wsUrl)).current;
  var ws_notifications = useRef(null);
  //ws_notifications.current = new WebSocket(wsUrl);

  //const wsUrl = ws_domain + 'ws/chat/' + item.id + '/?' + id;
  var ws_chat = useRef(null);
  //ws_chat.current = {};
  //cancel individual local notification
  const navigate = ({navigation, page}) => {
    navigation.push(page);
  };

  const showNotification = ({id, title, message, picture}) => {
    PushNotification.localNotification({
      id: id, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      title: title, // (optional)
      message: message, // (required)
      picture: picture,
    });
  };

  //cancel individual local notification
  const cancelNotif = id => {
    PushNotification.cancelLocalNotification({id: id});
  };

  //cancel all notifications
  const cancelAllNotifs = () => {
    PushNotification.cancelAllLocalNotifications();
    //PushNotificationIOS.removeDeliveredNotifications();
  };

  const send_notification = async (token, title, message, image) => {
    console.log(' ** TITLE ** ' + title);
    console.log(
      '**** send_notification - send_notification - send_notification ***** ',
    );
    const FIREBASE_API_SERVER_KEY =
      'AAAAGzmAmCs:APA91bEQuYdcJDoIcuRmvUnnGyQDYTkAwn4racHfIRqyUZXQa5je2iySO2dORdIfl8H3eaouTmovTJb_wMNyppv2ooE3soKs49nwzU-tOF1uqUq05CM37Pue6mjzvlzIUA_nuALWGotK';
    console.log('************** sending notification starting **************');
    let response = await fetch('https://fcm.googleapis.com/fcm/send', {
      method: 'POST',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
        Authorization: 'key=' + FIREBASE_API_SERVER_KEY,
      },
      body: JSON.stringify({
        notification: {
          title: title,
          body: message,
          icon: image,
          show_in_foreground: true,
          priority: 'high',
          content_available: true,
        },
        to: 'fENHhf_ti0o6ue9pBnwadJ:APA91bHyO-jxe5SGEY-Dl6Tq-i-saWgtIh2Zw_JwoNQZ3MTI7UQkhcRyOXKEnMKml-HZGYwxBD_28mEo2Qdq-ni7qwOMQSdTO9xLY1zQONpE5cc4JNUHfCzjqBNjtvHfo1k-I07Qj2eM',
      }),
    });
    var json = await response.json();
    console.log('notification response ->> ', json);
  };

  return (
    <NotificationContext.Provider
      value={{
        sayHiNotif,
        setSayHiNotif,
        chatNotif,
        setChatNotif,
        showNotification,
        cancelNotif,
        cancelAllNotifs,
        ws_notifications,
        navigate,
        send_notification,
        domain,
        ws_domain,
        wsUrl,
        ws_chat,
      }}>
      {children}
    </NotificationContext.Provider>
  );
};
